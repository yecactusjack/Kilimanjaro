
Build Error
Failed to compile

Next.js (14.2.16) is outdated (learn more)
./app/api/upload/route.ts
Error: 
  × the name `NextResponse` is defined multiple times
    ╭─[/home/runner/workspace/app/api/upload/route.ts:1:1]
  1 │ 
  2 │ import { NextResponse } from 'next/server';
    ·          ──────┬─────
    ·                ╰── previous definition of `NextResponse` here
  3 │ 
  4 │ export async function POST(request: Request) {
  5 │   try {
  6 │     const formData = await request.formData();
  7 │     const file = formData.get('file') as File;
  8 │     
  9 │     if (!file) {
 10 │       return NextResponse.json(
 11 │         { error: 'No file provided' },
 12 │         { status: 400 }
 13 │       );
 14 │     }
 15 │ 
 16 │     console.log("Uploading file:", file.name);
 17 │     
 18 │     // Create a new FormData to send to the external API
 19 │     const externalFormData = new FormData();
 20 │     externalFormData.append('file', file);
 21 │     
 22 │     // Forward the file to the external API
 23 │     const externalResponse = await fetch("http://206.1.35.40:3002/upload", {
 24 │       method: "POST",
 25 │       body: externalFormData
 26 │     });
 27 │     
 28 │     // Handle the response from the external API
 29 │     if (!externalResponse.ok) {
 30 │       const errorText = await externalResponse.text();
 31 │       console.error("External API error:", externalResponse.status, errorText);
 32 │       return NextResponse.json(
 33 │         { error: `External API error: ${externalResponse.status}` },
 34 │         { status: externalResponse.status }
 35 │       );
 36 │     }
 37 │     
 38 │     const responseData = await externalResponse.json();
 39 │     return NextResponse.json(responseData);
 40 │     
 41 │   } catch (error) {
 42 │     console.error("Upload error:", error);
 43 │     return NextResponse.json(
 44 │       { error: 'Internal server error' },
 45 │       { status: 500 }
 46 │     );
 47 │   }
 48 │ }
 49 │ import { NextResponse } from 'next/server';
    ·          ──────┬─────
    ·                ╰── `NextResponse` redefined here
 50 │ 
 51 │ export async function POST(request: Request) {
 52 │   try {
    ╰────

  × the name `POST` is defined multiple times
    ╭─[/home/runner/workspace/app/api/upload/route.ts:1:1]
  1 │ 
  2 │ import { NextResponse } from 'next/server';
  3 │ 
  4 │ export async function POST(request: Request) {
    ·                       ──┬─
    ·                         ╰── previous definition of `POST` here
  5 │   try {
  6 │     const formData = await request.formData();
  7 │     const file = formData.get('file') as File;
  8 │     
  9 │     if (!file) {
 10 │       return NextResponse.json(
 11 │         { error: 'No file provided' },
 12 │         { status: 400 }
 13 │       );
 14 │     }
 15 │ 
 16 │     console.log("Uploading file:", file.name);
 17 │     
 18 │     // Create a new FormData to send to the external API
 19 │     const externalFormData = new FormData();
 20 │     externalFormData.append('file', file);
 21 │     
 22 │     // Forward the file to the external API
 23 │     const externalResponse = await fetch("http://206.1.35.40:3002/upload", {
 24 │       method: "POST",
 25 │       body: externalFormData
 26 │     });
 27 │     
 28 │     // Handle the response from the external API
 29 │     if (!externalResponse.ok) {
 30 │       const errorText = await externalResponse.text();
 31 │       console.error("External API error:", externalResponse.status, errorText);
 32 │       return NextResponse.json(
 33 │         { error: `External API error: ${externalResponse.status}` },
 34 │         { status: externalResponse.status }
 35 │       );
 36 │     }
 37 │     
 38 │     const responseData = await externalResponse.json();
 39 │     return NextResponse.json(responseData);
 40 │     
 41 │   } catch (error) {
 42 │     console.error("Upload error:", error);
 43 │     return NextResponse.json(
 44 │       { error: 'Internal server error' },
 45 │       { status: 500 }
 46 │     );
 47 │   }
 48 │ }
 49 │ import { NextResponse } from 'next/server';
 50 │ 
 51 │ export async function POST(request: Request) {
    ·                       ──┬─
    ·                         ╰── `POST` redefined here
 52 │   try {
 53 │     const formData = await request.formData();
 54 │     const file = formData.get('file') as File;
    ╰────
This error occurred during the build process and can only be dismissed by fixing the error.